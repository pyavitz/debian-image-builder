#!/bin/bash

# builder version
BUILDER="5.6"

# script
if [[ `curl -I https://github.com 2>&1 | grep 'HTTP/2 200'` ]]; then
	:;
else
	echo -e "The builder requires a internet connection."
	exit 0;
fi
JSON_FILE="https://kernel.org/releases.json"
if [[ `curl -Ls $JSON_FILE | grep -w "version" | sed -n 4p | grep -w 5.15` ]]; then
	LTS1_L="5p";
else
	LTS1_L="6p";
fi
if [[ `curl -Ls $JSON_FILE | grep -w "version" | sed -n 3p | grep -w 6.1` ]]; then
	LTS2_L="4p";
else
	LTS2_L="5p";
fi
LTS1=$(curl -Ls $JSON_FILE | grep -w "version" | sed -n $LTS1_L | sed -r 's/"version"://g' | sed -r '1s/\s+//g' | sed 's/,//g' | sed 's/\"//g')
LTS2=$(curl -Ls $JSON_FILE | grep -w "version" | sed -n $LTS2_L | sed -r 's/"version"://g' | sed -r '1s/\s+//g' | sed 's/,//g' | sed 's/\"//g')
STABLE=$(curl -s $JSON_FILE | jq '.latest_stable.version' -r)
GCC=`ls -ls /usr/bin/gcc | sed 's/.*\(..\)/\1/' | sed 's/ //g'`

NAME=""
USERNAME=""
PASSWORD=""
VERSION="$LTS2"
NETWORKMANAGER="1"
USERACCT="0"
LOCALE="en_US.UTF-8"
TIMEZONE="America/New_York"
USER_NAMESERVER1="8.8.8.8"
USER_NAMESERVER2="8.8.4.4"
if [[ -f "profile.txt" ]]; then
	# source user profile
	. profile.txt
fi
HOSTNAME="default"
DISTRO="debian"
DISTRO_VERSION="bullseye"
UBOOT_VERSION="v2023.01"
BUILD_VERSION="1"
MENUCONFIG="0"
COMPILER="gcc-$GCC"
CCACHE="0"
RTL88XXAU="0"
RTL88X2BU="0"
RTL88XXCU="0"
RTL8188EU="0"
CUSTOM_DEFCONFIG="0"
MYCONFIG=""
LOGGING="0"
VERBOSE="0"
DEVROOTFS="1"
SHRINK="0"
COMPRESS_IMG="0"
USCRIPTS="0"

# open fd
exec 3>&1

# Store data to $VALUES variable
VALUES=$(dialog --ok-label "Submit" --no-cancel \
	  --backtitle "DEBIAN IMAGE BUILDER: CONFIG MENU" \
	  --title "" \
	  --form "" \
0 40 0 \
	" Name:"		1 1	"$NAME"			1 8 26 0 \
	" Username:"		2 1	"$USERNAME"		2 12 22 0 \
	" Password:"		3 1	"$PASSWORD"		3 12 22 0 \
	" Hostname:"		4 1	"$HOSTNAME"		4 12 22 0 \
	" "			5 1	""	 		5 14 0 0 \
	" Distribution"		6 1	""	 		6 14 0 0 \
	" Distro:"		7 1	"$DISTRO"		7 10 24 0 \
	" Release:"		8 1	"$DISTRO_VERSION"	8 11 23 0 \
	" Network Manager:"	9 1	"$NETWORKMANAGER"	9 19 2 0 \
	" "			10 1	""			10 14 0 0 \
	" U-Boot:"   		11 1    "$UBOOT_VERSION"	11 10 13 0 \
	" Branch:"   		12 1    "$VERSION"		12 10 10 0 \
	" Build:"   		13 1    "$BUILD_VERSION"	13 9 4 0 \
	" Menuconfig:"		14 1	"$MENUCONFIG"		14 14 2 0 \
	" Compiler:"		15 1	"$COMPILER"		15 12 9 0 \
	" Caching on:"		16 1	"$CCACHE"	 	16 14 2 0 \
	" "			17 1	""			17 14 0 0 \
	" Wireless"		18 1	""			18 14 0 0 \
	" RTL88XXAU:"		19 1	"$RTL88XXAU"		19 13 2 0 \
	" RTL88X2BU:"		20 1	"$RTL88X2BU"		20 13 2 0 \
	" RTL88XXCU:"		21 1	"$RTL88XXCU"		21 13 2 0 \
	" RTL8188EU:"		22 1	"$RTL8188EU"		22 13 2 0 \
	" "			23 1	""			23 14 0 0 \
	" Customize"		24 1	""			24 14 0 0 \
	" Defconfig:"		25 1	"$CUSTOM_DEFCONFIG"	25 13 2 0 \
	" Name:"		26 1	"$MYCONFIG"		26 8 26 0 \
	" "			27 1	""			27 14 0 0 \
	" User Options"		28 1	""			28 14 0 0 \
	" Logging:"		29 1	"$LOGGING"		29 11 2 0 \
	" Verbosity:"		30 1	"$VERBOSE"		30 13 2 0 \
	" Devel Rootfs:"	31 1	"$DEVROOTFS"		31 16 2 0 \
	" Shrink Rootfs:"	32 1	"$SHRINK"		32 17 2 0 \
	" Compress img:"	33 1	"$COMPRESS_IMG"		33 16 2 0 \
	" User scripts:"	34 1	"$USCRIPTS"		34 16 2 0 \
	" User service:"	35 1	"$USERACCT"		35 16 2 0 \
2>&1 1>&3)

# close fd
exec 3>&-

# convert into vars
echo "$VALUES" > tmp1
echo NAME='"' > tmp0
echo USERNAME='"' >> tmp0
echo PASSWORD='"' >> tmp0
echo HOSTNAME='"' >> tmp0
echo DISTRO='"' >> tmp0
echo DISTRO_VERSION='"' >> tmp0
echo NETWORKMANAGER= >> tmp0
echo UBOOT_VERSION='"' >> tmp0
echo VERSION='"' >> tmp0
echo BUILD_VERSION='"' >> tmp0
echo MENUCONFIG= >> tmp0
echo COMPILER='"' >> tmp0
echo CCACHE= >> tmp0
echo RTL88XXAU= >> tmp0
echo RTL88X2BU= >> tmp0
echo RTL88XXCU= >> tmp0
echo RTL8188EU= >> tmp0
echo CUSTOM_DEFCONFIG= >> tmp0
echo MYCONFIG='"' >> tmp0
echo LOGGING= >> tmp0
echo VERBOSE= >> tmp0
echo DEVROOTFS= >> tmp0
echo SHRINK= >> tmp0
echo COMPRESS_IMG= >> tmp0
echo USCRIPTS= >> tmp0
echo USERACCT= >> tmp0
echo 'EMMC="0"' >> tmp0
echo 'AIRCRACK="0"' >> tmp0
echo 'ROOTPASSWD="0"' >> tmp0
echo 'USER_PKGS=""' >> tmp0
echo 'CLANG="0"' >> tmp0
echo 'CLANG_VERSION="clang-15"' >> tmp0
echo 'CLANG_LLVM="LLVM=-15 LLVM_IAS=1"' >> tmp0
echo 'LTO_CLANG_THIN="0"' >> tmp0
echo CORES=\`nproc\` >> tmp0
echo 'CFLAGS=""' >> tmp0
echo 'KBUSER="marvin"' >> tmp0
echo 'KBHOST="martian"' >> tmp0
echo "set_locales(){" >> tmp0
echo "apt install -y locales" >> tmp0
echo "export LANGUAGE=${LOCALE}" >> tmp0
echo "export LANG=${LOCALE}" >> tmp0
echo "export LC_ALL=C.UTF-8" >> tmp0
echo "locale-gen ${LOCALE}" >> tmp0
echo "}" >> tmp0
echo "set_timezone(){" >> tmp0
echo "ln -snf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime" >> tmp0
echo "echo -n '${TIMEZONE}' > /etc/timezone" >> tmp0
echo "}" >> tmp0
echo NAMESERVER1='"'${USER_NAMESERVER1}'"' >> tmp0
echo NAMESERVER2='"'${USER_NAMESERVER2}'"' >> tmp0
echo builder=${BUILDER} >> tmp0
echo '"' > tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo >> tmp2
echo '"' >> tmp2
echo >> tmp2
echo >> tmp2
echo >> tmp2
echo >> tmp2
echo >> tmp2
echo >> tmp2
echo _defconfig'"' >> tmp2
paste -d '\0' tmp0 tmp1 tmp2  > userdata.txt
rm -f tmp0 tmp1 tmp2

# categories
sed -i '1i### USER INFORMATION' userdata.txt
sed -i '6i### DISTRIBUTION AND RELEASE' userdata.txt
sed -i '10i### UBOOT AND LINUX KERNEL' userdata.txt
sed -i '17i### WIRELESS' userdata.txt
sed -i '22i### CUSTOM' userdata.txt
sed -i '36i### COMPILER TUNING' userdata.txt
sed -i '43i### WHOAMI AND HOST' userdata.txt
sed -i '46i### LOCALES' userdata.txt
sed -i '54i### TIMEZONE' userdata.txt
sed -i '59i### NAME SERVER' userdata.txt
sed -i '62i### DO NOT EDIT BELOW THIS LINE' userdata.txt

# customize your image
custom_txt(){
echo "# Boot Partition: true false" > custom.txt
echo 'ENABLE_VFAT="false"' >> custom.txt
echo "" >> custom.txt
echo "# Root Filesystem Types: ext4 btrfs xfs" >> custom.txt
echo 'FSTYPE="ext4"' >> custom.txt
echo "" >> custom.txt
echo "# UEFI Options: true false" >> custom.txt
echo 'ENABLE_EFI="false"' >> custom.txt
echo "" >> custom.txt
echo "# Petitboot (ODROID): true false" >> custom.txt
echo 'ENABLE_PETITBOOT="false"' >> custom.txt
echo "" >> custom.txt
echo "# Compression Types: xz zst" >> custom.txt
echo 'IMG_COMPRESSION="xz"' >> custom.txt
echo "" >> custom.txt
echo "### DO NOT EDIT BELOW THIS LINE" >> custom.txt
echo "# CUSTOM=${BUILDER}" >> custom.txt
}
if [[ -f "custom.txt" ]]; then
	if [[ `grep -w "CUSTOM=${BUILDER}" "custom.txt"` ]]; then
		:;
	else
		custom_txt
	fi
else
	custom_txt
fi

# clear screen
clear -x

# userdata-txt
if [[ -f "userdata.txt" ]]; then
	sed -i 's/=0/="0"/g' userdata.txt
	sed -i 's/=1/="1"/g' userdata.txt
	sed -i 's/LLVM_IAS="1"/LLVM_IAS=1/g' userdata.txt
	echo -e "userdata file created."
	exit 0
fi

exit 0
